<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
				        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
				        http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-2.5.xsd
				        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
					    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<import resource="spring-security.xml"/>
	<import resource="spring-dao.xml"/>
	<import resource="spring-service.xml"/>
	<import resource="spring-web.xml"/>
	
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"	destroy-method="close">
		<property name="driverClass"><value>${jdbc.driverClassName}</value></property>
		<property name="jdbcUrl"><value>${jdbc.url}</value></property>
		<property name="user"><value>${jdbc.user}</value></property>
		<property name="password"><value>${jdbc.password}</value></property>
		
		<property name="minPoolSize"><value>1</value></property>
		<property name="maxPoolSize"><value>20</value></property>
		<property name="maxStatements"><value>0</value></property>
		<property name="acquireIncrement"><value>5</value></property>
		<property name="idleConnectionTestPeriod"><value>3600</value></property>
		<property name="maxIdleTime"><value>600</value></property>
	</bean>
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="location" value="classpath:jdbc.properties"/>
	</bean>	
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.jdbc.batch_size">5</prop>
				<prop key="hibernate.cashe.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop> 
			</props>
		</property>
		<property name="packagesToScan" value="com/huigao/pojo/" />
	</bean>
	
	<context:component-scan base-package="com.huigao"/>
    <context:annotation-config />
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	
	<!-- TransactionManager -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- Advice  --> 
	<tx:advice id="serviceManagerAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="list*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- Advisor -->
	<aop:config> 
		<aop:pointcut id="serviceManagerPointcut" expression="execution(* com.huigao.service.*.*(..))" />
		<aop:advisor advice-ref="serviceManagerAdvice" pointcut-ref="serviceManagerPointcut" />
	</aop:config>
	
</beans>